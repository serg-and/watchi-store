import h from"on-change";import{useEffect as v,useRef as l,useState as g}from"react";var a=new EventTarget,f=[],u=class{constructor(t,e){if(f.includes(e.toUpperCase()))throw`Store "${e}" already exists`;this.eventType=`${e.toUpperCase()}_WATCHI_UPDATE`,this.event=new Event(this.eventType),this.store=h(t,()=>this.trigger()),f.push(e.toUpperCase())}trigger(){a.dispatchEvent(this.event)}watch(t){return a.addEventListener(this.eventType,t),()=>a.removeEventListener(this.eventType,t)}revertable(t){return S(this.store,t)}transaction(t){let e=h.target(this.store);S(e,(s,r)=>{try{t(s),this.trigger()}catch(n){throw r(),n}})}revertOnError(t,e){let s=structuredClone(this.store);try{t()}catch(r){if((e?e(r):!0)===!0&&Object.assign(this.store,s),!e)throw r}}useWatch(t,e=(s,r)=>!Object.is(s,r)){let[s,r]=g(t(this.store)),n=l(s);return v(()=>this.watch(()=>{let c=t(this.store);(typeof e=="boolean"?e:e(c,n.current))&&(r(c),n.current=c)}),[]),s}useRefWatch(t){let e=l(t(this.store));return v(()=>this.watch(()=>{let r=t(this.store);Object.is(r,e.current)||(e.current=r)}),[]),e}};function w(o,t,e){let s=t.at(-1);if(s!=null){for(let r=0;r<t.length-1;r++)o=o[t[r]];o[s]=e}}function S(o,t){let e=[],s=h(o,(n,i,c)=>{e.push([n,c])},{pathAsArray:!0});function r(){for(let[n,i]of e.reverse())w(o,n,i)}t(s,r)}export{u as default};
